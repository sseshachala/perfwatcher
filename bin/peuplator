#!/usr/bin/php
<?php

chdir(dirname(dirname($_SERVER['SCRIPT_FILENAME'])));


require "lib/common.php";

$debug=false;

if (isset($argv[1])) {
    foreach($argv as $key => $val) {
        if ($key == 0) { continue; }
        switch($val) {
            case '-v':
                $debug=true;
            break;
        }
    }
}


$db = new _database($db_config);
if ($db->connect()) {
		$result_connect = 1;
# Clean the database
#
# Remove selection with deleteafter>tm
		$tm = time();
		$db->prepare("DELETE FROM selections where deleteafter <> 0 AND deleteafter < ?", array('integer'));
		$db->execute(array((int)$tm));

# Remove selections when there is no item in the tree with selection tree_id
		$db->prepare("DELETE FROM selections WHERE tree_id NOT IN (SELECT id FROM tree)");
		$db->execute();

# Remove items in tree when they have no parent
		$db->prepare("DELETE FROM tree WHERE parent_id NOT IN (SELECT id FROM (SELECT id FROM tree) x) AND parent_id <> 1");
		$db->execute();

# End of database cleaning
#
# Retreive view ids
		$db->prepare("SELECT distinct view_id FROM tree");
		$db->execute();
		while($db->nextr()) {
				$r = $db->get_row('assoc');
				$views[] = $r['view_id'];
		}
		$db->destroy();
}

foreach($peuplator_plugins as $plugin) {
		if (!file_exists("lib/class.$plugin.php")) { continue; }
		if (!include ("lib/class.$plugin.php")) { continue; }
}

foreach ($views as $view_id) {
		if ($debug) { print "============== Working on view $view_id ===============\n"; }
		$jstree = new json_tree($view_id);

		$all_containers = $jstree->get_containers();
		foreach ($all_containers as $container) {
				if ($debug) { echo "Working on container ".$container['title']." (".$container['id'].")\n"; }
				$serverlist = array();
				foreach($peuplator_plugins as $plugin) {
						if (!class_exists ($plugin)) { continue; }
						$oplugin = new $plugin($container);
						$serverlist = array_merge($serverlist, $oplugin->get());
				}
				foreach ($serverlist as $key => $val) {
						if ($val == '') { unset($serverlist[$key]); }
				}
				if (count($serverlist) > 0) {
						$childrens = $jstree->_get_children($container['id']);
						$childrenslist = array();
						foreach($childrens as $children) {
								if ($children['pwtype'] != 'server') { continue; }
								if (!in_array($children['title'], $serverlist)) {
										if ($debug) { echo "Removing child '".$children['title']."' (".$children['id'].") from '".$container['title']."' (".$container['id'].")"."\n"; }
										$jstree->_remove($children['id']);
								} else { $childrenslist[] = $children['title']; }
						}
						foreach($serverlist as $server) {
								if (!in_array($server, $childrenslist)) {
										$jstree->add_node($container['id'], $server);
										if ($debug) { echo "Adding child '$server' to '".$container['title']."' (".$container['id'].")"."\n"; }
								}
						}
				}
		}
}

?>
