#!/usr/bin/php
<?php
$starttime = time();
chdir(dirname(dirname($_SERVER['SCRIPT_FILENAME'])));

require "lib/common.php";

$debug=false;

if (isset($argv[1])) {
    foreach($argv as $key => $val) {
        if ($key == 0) { continue; }
        switch($val) {
            case '-v':
                $debug=true;
            break;
        }
    }
}

$db = new _database($db_config);
if ($db->connect()) {
		$result_connect = 1;
		$db->prepare("SELECT distinct view_id FROM tree");
		$db->execute();
		while($db->nextr()) {
				$r = $db->get_row('assoc');
				$views[] = $r['view_id'];
		}
		$db->destroy();
}


$conf = array();
sort($views);
foreach ($views as $view_id) {
		if ($debug) { print "============== Working on view $view_id ===============\n"; }
		$jstree = new json_tree($view_id);
# Get all containers for this view
		$containers = $jstree->get_containers();
		sort ($containers);
		foreach ($containers as $container) {
				if ($debug) { echo "Working on container ".$container['title']." (".$container['id'].")\n"; }

# Get infos for this container and leave if there is no aggregator
				$datas = $jstree->get_datas($container['id']);
				if (!isset($datas['aggregators']) || count($datas['aggregators']) == 0) { continue; } 
# Get Aggregator id (or generate it)
				if(isset($container['agg_id']) && $container['agg_id']) {
						$agg_id = $container['agg_id'];
				} else {
						$agg_id = $jstree->generate_aggregator_id($container['id']);
				}
				$container_host = 'aggregator_'.$agg_id;

# Get all children and sub-children with their Collectd source. Sort them by Collectd source.
				$cdsrc = $jstree->get_node_collectd_source($container['id']);
				$childrens = $jstree->_get_children($container['id'], true, "", "", $cdsrc);
				foreach($childrens as $idc => $children) {
						if ($children['pwtype'] == 'server') { 
							$children_with_cdsrc[$children['CdSrc']][$idc] = $children;
						}
				}
				if (count($children_with_cdsrc) == 0) { continue; }
# Parse all aggregators
				$alreadydoes = array();
				ksort($datas['aggregators']);
				foreach ($datas['aggregators'] as $aggregator => $aggdata) {
						if (isset($alreadydoes[$aggregator])) { continue; }
						$aggregator_cdsrc = $aggdata['CdSrc'];
						if (!isset($children_with_cdsrc[$aggregator_cdsrc])) { continue; }
						$aggregator_prefix = substr($aggregator, 0, -4);
						$pluginstr = substr($aggdata['plugin'], 0, -4);
						$calc = substr($aggdata['plugin'], -3);
						list($plugin, $plugin_instance, $type, $type_instance) =  split_pluginstr($pluginstr);


						if(!isset($conf[$aggregator_cdsrc])) { $conf[$aggregator_cdsrc] = ""; }
						$conf[$aggregator_cdsrc] .= "\t<aggregator>\n"
								.  "\t\tresultvalue \"$container_host/$plugin".( $plugin_instance != '' ? "-$plugin_instance" : '')."/".$type.(in_array($type, $derive_type) ? 'g' : '').( $type_instance != '' ? "-".str_replace(' ', '_', $type_instance) : '')."\"\n"
								.  "\t\toperation \"$calc\"\n";

						if ($calc == 'SUM') { $testcalc = 'AVG'; } else { $testcalc = 'SUM'; }
						if (isset($datas['aggregators'][$aggregator_prefix.'-'.$testcalc])) {
								$conf[$aggregator_cdsrc] .= "\t\toperation \"$testcalc\"\n";
								$alreadydoes[$aggregator_prefix.'-'.$testcalc] = true;
						}
						$conf[$aggregator_cdsrc] .= "\t\t<valuelist manual>\n";

						ksort($children_with_cdsrc[$aggregator_cdsrc]);
						foreach($children_with_cdsrc[$aggregator_cdsrc] as $idc => $children) {
								if ($children['pwtype'] != 'server') { continue; }
								if (in_array($type, $grouped_type)) {
										$conf[$aggregator_cdsrc] .= "\t\t\talltypesof	\"".$children['title']."/".str_replace("\"", "\\\"", $pluginstr)."\"\n";
								} else {
										$conf[$aggregator_cdsrc] .= "\t\t\ttype	\"".$children['title']."/".str_replace("\"", "\\\"", $pluginstr)."\"\n";
								}
						}

						$conf[$aggregator_cdsrc] .= "\t\t</valuelist>\n";
						$conf[$aggregator_cdsrc] .= "\t</aggregator>\n";
				}
		}
}

foreach($conf as $cdsrc => $conftxt) {
		$localconf = file_exists("etc/aggregator-$cdsrc.local.conf") ? file_get_contents("etc/aggregator-$cdsrc.local.conf") : '';
		$oldconf = file_exists("$aggregator_config_dir/aggregator-$cdsrc.conf") ? file_get_contents("$aggregator_config_dir/aggregator-$cdsrc.conf") : '';
		if($localconf) {
				$conftxt .= $localconf;
		}
		if ($oldconf != $conftxt) {
				file_put_contents("$aggregator_config_dir/aggregator.conf.tmp", $conftxt);
				rename("$aggregator_config_dir/aggregator.conf.tmp", "$aggregator_config_dir/aggregator-$cdsrc.conf");
				echo "$aggregator_config_dir/aggregator-$cdsrc.conf updated\n";
		}
}

?>
